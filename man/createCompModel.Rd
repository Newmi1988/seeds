% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createC.R
\name{createCompModel}
\alias{createCompModel}
\title{Create compilable c-code of a model}
\usage{
createCompModel(modelFunc, parameters)
}
\arguments{
\item{modelFunc}{a R-function that can be solved with deSolve. External input of the system should
be declared with 'u'. To ensure that the function is working use the most general
state-space representation.}

\item{parameters}{a vector describing the parameters of the system. If names are missing the function
tries to extract the declared parameters from the model function.}
}
\value{
None
}
\description{
Writes a c file that can be compiled for faster solution with the \code{\link[deSolver]{ode}} solver.
The file created is formated to be used with the dynamic elastic net. A hidden input is 
added to every component of the state vector.
}
\note{
On the usage of compiled code in conjunction with \pkg{deSolve} take a look into the vignette 'R
Package deSolve, Writing Code in Compiled Languages'
}
\examples{
modelJakStat  <- function(t, x, parameters, input) {
  with (as.list(parameters),{
    
    k1 = parameters[1]
    k2 = parameters[2]
    k3 = parameters[3]
    k4 = parameters[4]
    s1 = parameters[5]
    s2 = parameters[6]
    
    u <- input$u(t)
    
    dx1 = -k1 * x[1]  * u
    dx2 = k1 *  x[1]  * u - k2 * x[2]*x[2]
    dx3 = -k3*x[3] + 0.5*k2*x[2]*x[2]
    dx4 = k3 * x[3]
    
    list(c(dx1 ,dx2 ,dx3 ,dx4 ))
  })
}

parameters = 10^c("k1"=0.31, "k2"=-1, "k3"=-0.49, "k4"= 0.42, "s1"=-0.21, "s2"=-0.34)
# you can used a unnamed vector for the parameters if these are declared like in the function above
parameters = 10^c(0.31, -1, -0.49, 0.42, -0.21,-0.34)


createCompModel(modelFunc = modelJakStat, parameters = parameters)
file.edit('model.c')
}
